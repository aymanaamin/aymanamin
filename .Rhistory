blogdown::hugo_version()
blogdown::update_hugo()
setwd("D:/0 All My TSA Work/0 Rfiles/MainRfilesMac")
#=====================================================
setwd("D:/0 All My TSA Work/0 Rfiles/MainRfilesMac/AnalyticDSARMA - Estimation")
library(forecast)
model <- Arima(ts(rnorm(100),freq=4), order=c(1,1,1), seasonal=c(1,1,1),
fixed=c(phi=0.5, theta=-0.4, Phi=0.3, Theta=-0.2))
model
model <- Arima(ts(rnorm(20),freq=4), order=c(1,1,1), seasonal=c(1,1,1),
fixed=c(phi=0.5, theta=-0.4, Phi=0.3, Theta=-0.2))
model
model <- Arima(ts(rnorm(1000),freq=4), order=c(1,1,1), seasonal=c(1,1,1),
fixed=c(phi=0.5, theta=-0.4, Phi=0.3, Theta=-0.2))
model
model
model$arma
foo <- simulate(model, nsim=1000)
foo
model <- Arima(ts(rnorm(100),freq=4), order=c(1,1,1), seasonal=c(1,1,1),
fixed=c(phi=0.5, theta=-0.4, Phi=0.3, Theta=-0.2))
foo <- simulate(model, nsim=1000)
foo
fit <- Arima(foo, order=c(1,1,1), seasonal=c(1,1,1))
fit
model <- Arima(ts(rnorm(100),freq=4), order=c(1,1,1), seasonal=c(1,1,1),
fixed=c(phi=0.5, theta=-0.4, Phi=0.3, Theta=-0.2))
foo <- simulate(model, nsim=5000)
fit <- Arima(foo, order=c(1,1,1), seasonal=c(1,1,1))
fit
model <- Arima(ts(rnorm(100),freq=4), order=c(1,1,1), seasonal=c(1,1,1),
fixed=c(phi=0.5, theta=-0.4, Phi=0.3, Theta=-0.2))
foo <- simulate(model, nsim=5000)
fit <- Arima(foo, order=c(1,1,1), seasonal=c(1,1,1))
fit
model <- Arima(ts(rnorm(100),freq=4), order=c(1,1,1), seasonal=c(1,1,1),
fixed=c(phi=0.5, theta=-0.4, Phi=0.3, Theta=-0.2))
set.seed(111)
foo <- simulate(model, nsim=5000)
fit <- Arima(foo, order=c(1,1,1), seasonal=c(1,1,1))
fit
model <- Arima(ts(rnorm(100),freq=4), order=c(1,1,1), seasonal=c(1,1,1),
fixed=c(phi=0.5, theta=-0.4, Phi=0.3, Theta=-0.2))
set.seed(111)
foo <- simulate(model, nsim=5000)
fit <- Arima(foo, order=c(1,1,1), seasonal=c(1,1,1))
fit
model <- Arima(ts(rnorm(100),freq=4), order=c(1,1,1), seasonal=c(1,1,1),
fixed=c(phi=0.5, theta=-0.4, Phi=0.3, Theta=-0.2))
set.seed(111)
foo <- simulate(model, nsim=5000)
fit <- Arima(foo, order=c(1,1,1), seasonal=c(1,1,1))
fit
model <- Arima(ts(rnorm(100),freq=4), order=c(1,1,1), seasonal=c(1,1,1),
fixed=c(phi=0.5, theta=-0.4, Phi=0.3, Theta=-0.2))
set.seed(111)
foo <- simulate(model, nsim=1000)
fit <- Arima(foo, order=c(1,1,1), seasonal=c(1,1,1))
fit
model <- Arima(ts(rnorm(100),freq=4), order=c(1,1,1), seasonal=c(1,1,1),
fixed=c(phi=0.5, theta=-0.4, Phi=0.3, Theta=-0.2))
set.seed(111)
foo <- simulate(model, nsim=1000)
fit <- Arima(foo, order=c(1,1,1), seasonal=c(1,1,1))
fit
model <- Arima(ts(rnorm(100),freq=4), order=c(1,1,1), seasonal=c(1,1,1),
fixed=c(phi=0.5, theta=-0.4, Phi=0.3, Theta=-0.2))
set.seed(111)
foo <- simulate(model, nsim=1000)
fit <- Arima(foo, order=c(1,1,1), seasonal=c(1,1,1))
fit
model <- Arima(ts(rnorm(100),freq=4), order=c(1,1,1), seasonal=c(1,1,1),
fixed=c(phi=0.5, theta=-0.4, Phi=0.3, Theta=-0.2))
set.seed(111)
foo <- simulate(model, nsim=1000)
fit <- Arima(foo, order=c(1,1,1), seasonal=c(1,1,1))
fit
model <- Arima(ts(rnorm(100),freq=4), order=c(1,1,1), seasonal=c(1,1,1),
fixed=c(phi=0.5, theta=-0.4, Phi=0.3, Theta=-0.2))
set.seed(111)
foo <- simulate(model, nsim=1000)
fit <- Arima(foo, order=c(1,1,1), seasonal=c(1,1,1))
fit
setwd("D:/0 All My TSA Work/0 Rfiles/MainRfilesMac/AnalyticTSARMA - Estimation")
#
prod2yo	<- function(param1,param2,s1)  # o for nodes, initial values
{
# param1	<- phi
# param2	<- Phi
n1		<- length(param1) # n1 = p
n2		<- length(param2) # n2 = P1
param	<- matrix(c(1,-param1,rep(0,(s1-n1-1))),s1,1)%*%matrix(c(1,-param2),1,(n2+1))
#param	<- as.vector(param)
param	<- -param[2:(n1+(n2*s1)+1)]
# param	<- param
} # End Function
#
prod3yo	<- function(param1,param2,param3,s1,s2)  # o for nodes, initial values
{
# param1	<- phi
# param2	<- Phi
n1		<- length(param1) # n1 = p
n2		<- length(param2) # n2 = P1
n3		<- length(param3) # n3 = P2
param	<- matrix(c(1,-param1,rep(0,(s1-n1-1))),s1,1)%*%matrix(c(1,-param2),1,(n2+1))
param	<- matrix(c(param,rep(0,(s2-n2*s1-s1))),s2,1)%*%matrix(c(1,-param3),1,(n3+1))
param	<- -param[2:(n1+(n2*s1)+(n3*s2)+1)]
} # End Function
#
prod4yo	<- function(param1,param2,param3,param4,s1,s2,s3)  # o for nodes, initial values
{
# param1	<- phi
# param2	<- Phi
n1		<- length(param1) # n1 = p
n2		<- length(param2) # n2 = P1
n3		<- length(param3) # n3 = P2
n4		<- length(param4) # n4 = P3
param	<- matrix(c(1,-param1,rep(0,(s1-n1-1))),s1,1)%*%matrix(c(1,-param2),1,(n2+1))
param	<- matrix(c(param,rep(0,(s2-n2*s1-s1))),s2,1)%*%matrix(c(1,-param3),1,(n3+1))
param	<- matrix(c(param,rep(0,(s3-n3*s2-s2))),s3,1)%*%matrix(c(1,-param4),1,(n4+1))
param	<- -param[2:(n1+(n2*s1)+(n3*s2)+(n4*s3)+1)]
# param	<- param
} # End Function
param1	<- 0.3
param2	<- 0.4
param3	<- 0.6
param4	<- 0.2
s1 = 4; s2 = 12; s3=84
#res=prod2yo(param1,param2,s1)
#res
res=prod3yo(param1,param2,param3,s1,s2)
res
arma3 <- arima.sim(n = 1000, list(ar = res) )
plot(arma3)
length(res)
fit <- Arima(arma3, order=c(17,0,0))
fit
fit$coef
res
rbind(fit$coef,res)
? Arima
fit <- Arima(arma3, order=c(17,0,0), include.mean = FALSE)
fit
fit$coef
res
rbind(fit$coef,res)
fit
fit$coef
fit$coef = res
fit$coef
fit
# fit
fit <- Arima(arma3, order=c(17,0,0), include.mean = FALSE)
fit$coef
fit$coef[1]
fit$coef[,1]
fit$coef[1,]
fit$coef[1]
fit$coef[1:2]
colnames(fit$coef)
nrow(fit$coef)
ncol(fit$coef)
as.vector(fit$coef)
fc = as.vector(fit$coef)
colnames(fc)
rownames(fc)
nr(fc)
nrow(fc)
ncol(fc)
ncol(res)
res
as.list(res)
fit$coef
Arima
arima()
arima2
stats::arima
fit$coef
names(fit$coef)
res
fit
colnames(res) =
fit$coef = res
# fit
fit <- Arima(arma3, order=c(17,0,0), include.mean = FALSE)
fit$coef
fit
colnames(res) =
fit$coef = res
res
res
# fit
fit <- Arima(arma3, order=c(17,0,0), include.mean = FALSE)
# fit
fit <- Arima(arma3, order=c(17,0,0), include.mean = FALSE)
fit
fit$coef
rbind(fit$coef,res)
fit$coef = res
fit
names(fit$coef)
# fit
fit <- Arima(arma3, order=c(17,0,0), include.mean = FALSE)
fit2 = fit
names(fit$coef)
names(res) = names(fit$coef)
res
fit2$coef = res
fit
fit2
n <- 1000; nrun <- 100; p <- 1; P1 <- 1; P2 <- 1; q <- 0; Q1 <- 0; Q2 <- 0
# parameter values
phi <- c(0.4); Phi <- c(0.4); Pi <- c(-0.3); theta <- c(0.0); Theta <- c(0.0); Psi <- c(0.0); sigma <- 1 # variance
# Seasonality Order
s1 <- 24; s2 <- 168
#----- Generate TS from DSARMA model
param=prod3yo(phi,Phi,Pi,s1,s2)
set.seed(111)
#ym <- gen.dsar(n,nrun,p,P1,P2,q,Q1,Q2,s1,s2,phi,Phi,Pi,theta,Theta,Psi,sigma)
ym <- arima.sim(n = n, list(ar = param), sd=1 )
ym
#--------------- fit
fit <- Arima(ym, order=c(17,0,0), include.mean = FALSE)
fit
fit$coef
rbind(fit$coef,param)
#----- Generate TS from DSARMA model
param=prod3yo(phi,Phi,Pi,s1,s2)
param
rbind(fit$coef,param)
rbind(fit$coef,param)
fit$fitted
fit$residuals
fit$residuals
fit$residuals - fit$fitted
fit$residuals - fit$fitted
accuracy(fit)
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
set.seed(10)
M=c();S=c();z=c();n=2000
z=c();z=arima.sim (list (order=c(1,0,1),ar=-0.2,ma=-2.2),n=n)
odd=c();even=c();zz=c()
odd=seq(1,length(z)-1,by=2);even=seq(2,length(z),by=2)
odd
even
odd
mean(z)
zz[odd]=2*mean(z)-z[odd]
zz[even]=z[even]
fit=c();fit <- forecast::auto.arima(x = zz, allowdrift = FALSE, ic = "bic")
et=c();et=resid (fit)
M=c();M[1]=mean (et)
S=c();S[1]=sd (et)
# Yt-Yt from model=residuals
shift=c();shift=c(0.25,0.5,0.75,1,1.25,1.5)
for(i in 1:length (shift)){
kk=c();kk=z+shift[i]
kk[odd]=2*mean (kk)-kk[odd];kk[even]=kk[even]
res=c();res=kk-(z-et)
M[i+1]=mean (res)
S[i+1]=sd (res)
}
shift=c(0,shift)
M=M-M[1];S=S/S[1]
round (cbind (shift, M,S),digits=2)
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::preview_site(startup = TRUE)
blogdown::serve_site()
blogdown::install_hugo()
blogdown::serve_site()
blogdown::serve_site()
? hugo
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
? blogdown.server.timeout
library(bookdown)
library(blogdown)
blogdown::serve_site()
remotes::install_github('rstudio/blogdown')
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
library(blogdown)
library(blogdown)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site()
blogdown:::preview_site(startup = TRUE)
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()

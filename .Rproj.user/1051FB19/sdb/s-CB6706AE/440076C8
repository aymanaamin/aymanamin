{
    "collab_server" : "",
    "contents" : "# egyptian electricity consumtion data\n#=====================================================\n#------------------------------------\n#rm(list=ls(all=TRUE))\n#------------------------------------\n#---------------------- Libraries --------------\nlibrary(data.table)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(ggmap)\nlibrary(gridExtra)\nlibrary(forecast)\n#------------------------------------\n# change directory \nsetwd(\"D:/0 All My TSA Work/0 Rfiles/MainRfilesMac/egypt-elect\")\n#------------------------------------\nsource(\"functions.R\")\n\n#=== Read data as tableD\negydata <- fread(\"egyptdata/egyptelectdata.csv\")\nstr(egydata)\n\n#=== Read change the types of variables for forecasting\negydata[, date := as.Date(egydata[[\"date\"]], \"%Y-%m-%d\")]\negydata[, date_time := ymd_hms(egydata[[\"date_time\"]])]# make date_time2 as date-time formate\negydata[,value:=as.numeric(value)]\negydata[, ID := as.character(egydata[[\"ID\"]])]\nstr(egydata)\n\negydata[, week := weekdays(date_time)]\nunique(egydata[, week])\n\nn_weekdays <- unique(egydata[, week])\nn_date <- unique(egydata[, date])\nperiod <- 24\n\n\n#== plot data 9 weeks.\n# select 5 weeks of the data from 1.2 to 31.3\negydata1  <- egydata#[date %in% n_date[28:90]]\n\ndatas <- data.table(value = c(egydata1[,value]),\n                    date = c(egydata[, date_time]))\n\nggplot(data = datas, aes(date, value)) +\n  geom_line(size = 0.6) +\n  theme(panel.border = element_blank(), panel.background = element_blank(),\n        panel.grid.minor = element_line(colour = \"grey90\"),\n        panel.grid.major = element_line(colour = \"grey90\"),\n        panel.grid.major.x = element_line(colour = \"grey90\"),\n        title = element_text(size = 14),\n        axis.text = element_text(size = 10),\n        axis.title = element_text(size = 12, face = \"bold\")) +\n  labs(x = \"Time\", y = \"Load (kW)\",\n       title = \"Comparison of forecasts from two models\")\n\n#===========================\n\n\n#=== \"Median daily profile +- deviation (MAD)\"\nMed_Mad <- egydata1[ , .(Med = median(value), Mad = mad(value)),\n                   by = (seq(nrow(egydata1)) - 1) %% 24]\nggplot(Med_Mad, aes(x = seq, Med)) + \n  geom_line(size = 0.5) +\n  geom_ribbon(data = Med_Mad, aes(ymin = Med - Mad, ymax = Med + Mad),\n              fill = \"firebrick2\", alpha = 0.3) +\n  theme(title = element_text(size = 14),\n        axis.text = element_text(size = 10),\n        axis.title = element_text(size = 12, face = \"bold\")) +\n  labs(title = \"Median daily profile +- deviation (MAD)\") +\n  labs(x = \"Time\", y = \"Load (kW)\")\n\n\n#=== \"Median weekly profile +- deviation (MAD)\"\n\nMed_Mad_Week <- egydata1[ , .(Med = median(value), Mad = mad(value)),\n                        by = (seq(nrow(egydata1)) - 1) %% (24*7)]\n# start from Monday\nggplot(Med_Mad_Week, aes(x = seq, Med)) + \n  geom_line(size = 0.5) + \n  geom_ribbon(data = Med_Mad_Week, aes(ymin = Med - Mad, ymax = Med + Mad),\n              fill = \"firebrick2\", alpha = 0.3) +\n  geom_vline(xintercept = c(23, 23+(24*4), 23+(24*5)), linetype = 2, size = 1) +\n  theme(title = element_text(size = 14),\n        axis.text = element_text(size = 10),\n        axis.title = element_text(size = 12, face = \"bold\")) +\n  labs(title = \"Median weekly profile +- deviation (MAD)\") +\n  labs(x = \"Time\", y = \"Load (kW)\")\n\n\n#===========================\negydata1  <- egydata[date %in% n_date[28:90]]\nY=egydata1[ , value]\nts_Y <- ts(Y, start = 0, freq = period)\ndekom <- stl(ts_Y, s.window = \"periodic\", robust = TRUE)\narima <- forecast(dekom, h = period, method = \"arima\")\nsummary(arima)\nexpo <- forecast(dekom, h = period, method = \"ets\", etsmodel = \"ZZN\")\nsummary(expo)\n\naccuracy(arima)\naccuracy(expo)\n\nplot(dekom)\nplot(arima)\n\nAcf(ts_Y)\nPacf(ts_Y)\n\n\n#== Let?s do some examples of using predictWeek function. Run the forecast for selection of dates on aggregated consumption and compute MAPE for both methods (STL+ARIMA and STL+EXP).\nfor_week_arima <- predictWeek(egydata, n_date[28:76], stlARIMAPred) # forecast for one week\nfor_week_exp <- predictWeek(egydata, n_date[28:76], stlEXPPred)\nreal_week <- egydata[date %in% n_date[77:83], value] # real consumption\nc(ARIMA = mape(real_week, for_week_arima), EXP = mape(real_week, for_week_exp))\n##    \n\naccuracy(for_week_arima,real_week)\naccuracy(for_week_exp,real_week)\n\n\n# prepare data in msts\noy  <- egydata[date %in% n_date[28:90], value] # 9 weeks\ny  <- msts(oy, seasonal.periods=c(24,168)) # now multiple seasonal data\n\ntrain = window(y,start=c(1,1),end=c(7,168))# 7 weeks\n\nfit.dshw = dshw(train, h = 168)\naccuracy(fit.dshw,real_week) # one week\n\nfit.tbats <- tbats(train)\naccuracy(forecast(fit.tbats,h=168),real_week) # one week\n\n\n# harmonic regression\nfit.harm <- auto.arima(train, seasonal=FALSE, lambda=0, xreg=fourier(train, K=c(10,10)))\nfc <- forecast(fit.harm, xreg=fourier(train, K=c(10,10), h=168))\naccuracy(fc,real_week) # one week\n\n",
    "created" : 1525445353802.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3821987511",
    "id" : "440076C8",
    "lastKnownWriteTime" : 1517434853,
    "last_content_update" : 1517434853,
    "path" : "D:/0 All My TSA Work/0 Rfiles/MainRfilesMac/egypt-elect/egypt-elect 2 - all year.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}
{
    "collab_server" : "",
    "contents" : "#=====================================================\n# main-est: for Rank based estimation of ARMA models using Andrews' work\n#           comapred to MLE\n#---------------------- Libraries --------------\n#rm(list=ls(all=TRUE))\nlibrary(Rfit)\nlibrary(npsm)\nlibrary(hbrfit)\nlibrary(npsmReg2)\nlibrary(quantreg)\nlibrary(forecast)\nlibrary(tcltk)\t\t# create progress bar\nlibrary(matrixStats) # function \"colSds\"\n#------------------------------------\nsetwd(\"D:/0 All My TSA Work/0 Rfiles/MainRfilesMac/Rank-based analysis-SARMA\")\n#------------------------------------\nsource(\"genTSfunctions.R\")\nsource(\"functions.R\")\n\n#  no. of obs. and model sarma orders\nn <- 1000; nrun <- 1000; p <- 0; q <- 1; P <- 0; Q <- 1\n# parameter values\nphi <- c(0.3); Phi <- c(0.6); theta <- c(0.4); Theta <- c(0.3); sigma2 <- 1 # variance\n# Seasonality Order\ns <- 4;  \nnval = 4 # no of sample sizes \"250:1000\"\n\n#- distribution of noise and weights\ndist.type = \"normal\" # normal, laplace, logistic, t, cntom-normal, skwcntom-normal\nwght.type = \"wilcox\" # vander; lad; wilcox;  \n#----- Generate TS from SARMA model\nset.seed(111)\nym <- gen.sarma(n,nrun,p,q,P,Q,s,phi,theta,Phi,Theta,sigma2,dist.type)\n#x=ym\n#res1 = matrix(NA,nrun,(pst+qst))\n#res2 = matrix(NA,nrun,(p+q+P+Q))\n\nres1m = matrix(NA,nrun,(p+P+p*P+q+Q+q*Q))\nres1s = matrix(NA,nrun,(p+P+p*P+q+Q+q*Q))\nres2m = matrix(NA,nrun,(p+q+P+Q))\nres2s = matrix(NA,nrun,(p+q+P+Q))\nres3m = matrix(NA,nrun,(p+P+p*P+q+Q+q*Q))\nreslt= matrix(NA,nval,((p+P+p*P+q+Q+q*Q)+(p+q+P+Q)+3))\n\n#------------------------------\n# create progress bar for \"ndraw\"\n  pb <- tkProgressBar(title = \"progress bar\", min = 0, max = nrun, width = 300)\n#------------------------------\n\nfor (ii in 1:nval){\n  ni =ii*250\nfor (i in 1:nrun)\n{fit = rfit.arma(ym[1:ni,i],p,q,P,Q,s,wght.type)#; varcov = rfit.vcov(ym[,i],p,q,P,Q,s,fit,wght.type)\nres1m[i,] = fit#[c(1,4,6,9)]\n#res1s[i,] = sqrt(diag(varcov))#c(sqrt(varcov[1,1]),sqrt(varcov[4,4]),sqrt(varcov[6,6]),sqrt(varcov[9,9]))\n\nfit = Arima(ts(ym[1:ni,i], frequency = s),order = c(p, 0, q),seasonal = c(P, 0, Q), include.mean = FALSE)\nres2m[i,] = fit$coef#[c(1,3,2,4)]\n#res2s[i,] = sqrt(diag(vcov(fit)))#c(sqrt(vcov(fit)[1,1]),sqrt(vcov(fit)[3,3]),sqrt(vcov(fit)[2,2]),sqrt(vcov(fit)[4,4]) )\n\n# LTS # only SAR\n# xy = pre.fn(ym[,i],p,P,q,Q,s)\n# tmp=ltsreg(xy,ym[,i],intercept=F)\n# res3m[i,] = tmp$coefficients\n#---------- Progress Bar\nSys.sleep(0.1)\nsetTkProgressBar(pb, i, label=paste( round(i*100/nrun, 0),\"% done for n=\",ii*250))\n#-------------\n} # end for loop\n\n  if (q==0) {\n    mse2 = ( sum((res2m[,1]-phi)^2)+sum((res2m[,2]-Phi)^2))\n    mse1 = (sum((res1m[,1]-phi)^2)+sum((res1m[,2]-Phi)^2))\n    are = mse2/mse1 }\n  \n  if (p==0) {mse2 = ( sum((res2m[,1]-theta)^2)+sum((res2m[,2]-Theta)^2))\n  mse1 = (sum((res1m[,1]-theta)^2)+sum((res1m[,2]-Theta)^2) )\n  are = mse2/mse1}\n  \n  if (q>0 && p>0) {mse2 = ( sum((res2m[,1]-phi)^2)+sum((res2m[,3]-Phi)^2)+sum((res2m[,2]-theta)^2)+sum((res2m[,4]-Theta)^2) )\n  mse1 = (sum((res1m[,1]-phi)^2)+sum((res1m[,2]-Phi)^2)+sum((res1m[,4]-theta)^2)+sum((res1m[,5]-Theta)^2))\n  are = mse2/mse1}\n  \n  print(c(colMeans(res1m),mse1,colMeans(res2m),mse2,are))\n  reslt[ii,] = c(colMeans(res1m),mse1,colMeans(res2m),mse2,are)\n    \n} # end FOR ii\n\n\n#==== results SAR ===\n#  no. of obs. and model sarma orders\n# n <- 1000; nrun <- 1000; p <- 1; q <- 0; P <- 1; Q <- 0\n# parameter values\n# phi <- c(0.4); Phi <- c(0.3); theta <- c(0.7); Theta <- c(0.5); sigma2 <- 1 # variance\n# Seasonality Order\n# s <- 4;  \n# nval = 4 # no of sample sizes \"250:1000\"\n\n#==== results SMA ===\n#  no. of obs. and model sarma orders\n# n <- 1000; nrun <- 1000; p <- 0; q <- 1; P <- 0; Q <- 1\n# parameter values\n# phi <- c(0.4); Phi <- c(0.3); theta <- c(0.5); Theta <- c(0.6); sigma2 <- 9 # variance\n# Seasonality Order\n# s <- 4;  \n# nval = 4 # no of sample sizes \"250:1000\"\n\n#- distribution of noise and weights\n# dist.type = \"t\" # normal, laplace, logistic, t, cntom-normal, skwcntom-normal\n# wght.type = \"wilcox\" # vander; lad; wilcox;  \n#reslt1 = reslt # normal\n#reslt2 = reslt # laplace \n#reslt3 = reslt # t(3) \n#reslt4 = reslt # cntom-normal sigma2 = 9, %= 0.3\n\n#==== results SAR-2 ===\n#reslt1 = reslt # normal, phi <- c(0.7); Phi <- c(0.5)\n#reslt2 = reslt # normal, phi <- c(0.5); Phi <- c(0.7)\n#reslt3 = reslt # normal, phi <- c(0.8); Phi <- c(0.7) \n#reslt4 = reslt # normal, phi <- c(0.3); Phi <- c(0.6)\n\n#==== results SMA-2 ===\n#reslt1 = reslt # normal, theta <- c(0.4); Theta <- c(0.3)\n\n# reslt1\n# reslt2\n# reslt3\n# reslt4\nreslt\n\n",
    "created" : 1525448895020.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3801092029",
    "id" : "A55DE4C8",
    "lastKnownWriteTime" : 1516288272,
    "last_content_update" : 1516288272,
    "path" : "D:/0 All My TSA Work/0 Rfiles/MainRfilesMac/Rank-based analysis-SARMA/main-est-SARMA.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}
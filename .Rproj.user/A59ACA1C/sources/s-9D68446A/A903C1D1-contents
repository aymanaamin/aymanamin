# options(download.file.method="libcurl")
devtools::install_github("PetoLau/TSrepr")
devtools::install_github("robjhyndman/tscompdata")
devtools::install_github("robjhyndman/tsfeatures")


library(forecast)
library(ggplot2)


library(tsfeatures)
library(tidyverse)
library(anomalous)

library(tscompdata)


# ques in applied math
a = matrix(c(3,6,3,4,5,2,5,2,1),3,3)
solve(a)%*%matrix(c(24.4,30.4,13.4))



library(ggplot2)
plot(M1[[1]])
autoplot(M1$YAF3)
autoplot(M3[["N0647"]])




#=== 
library(tscompdata)
# -- this library contains good data nngc1: 11 each annually, quarterly, monthly, weekly, daily and hourly
#-- for hourly good data from nngc1[[58]] to nngc1[[66]]
plot(nngc1[[58]])
plot(nngc1[[66]])

# --- montly from nngc1[[23]] to nngc1[[33]]

plot(nngc1[[33]]) # 25, 26, 27, 28, 29, 30,(31), 32, 33
plot(diff(nngc1[[33]]))

nngc1[25]







#====================  GIS  ============

x <- c("ggmap", "rgdal", "rgeos", "maptools", "dplyr", "tidyr", "tmap")
install.packages(x) # warning: uncommenting this may take a number of minutes
lapply(x, library, character.only = TRUE) # load the required packages

library(tmap)
library(RgoogleMaps)


library(sp)  # classes for spatial data
library(raster)  # grids, rasters
library(rasterVis)  # raster visualisation
library(maptools)
library(rgeos)
library(rgdal)

library(maps)
library(mapdata)
library(ggmap)
library(marmap)
library(lattice)




#== 
library(dplyr) # load dplyr
head(lnd$name) # dataset to add to (results not shown)
head(crime_ag$Borough) # the variables to join
library(tmap) # load tmap package (see Section IV)
qtm(lnd, "CrimeCount") # plot the basic map



library(rgdal) # ensure rgdal is loaded
# Create new object called "lnd" from "london_sport" shapefile
lnd <- readOGR(dsn = "data", "london_sport")
plot(lnd) # plot the lnd object (not shown)
nrow(lnd) # return the number of rows (not shown)




#== Spatial data in R: Using R as a GIS
library(sp)  # classes for spatial data
library(raster)  # grids, rasters
library(rasterVis)  # raster visualisation
library(maptools)
library(rgeos)



library(dismo)
mymap <- gmap("Egypt")  # choose whatever country
plot(mymap)

mymap <- gmap("Egypt", type = "satellite", exp = 3)
plot(mymap)

mymap <- gmap("Egypt", exp = 1)
plot(mymap)


library(RgoogleMaps)
newmap <- GetMap(center = c(36.7, -5.9), zoom = 10, destfile = "newmap.png", 
                 maptype = "satellite")

# Now using bounding box instead of center coordinates:
newmap2 <- GetMap.bbox(lonR = c(-5, -6), latR = c(36, 37), destfile = "newmap2.png", 
                       maptype = "terrain")

# Try different maptypes
newmap3 <- GetMap.bbox(lonR = c(-5, -6), latR = c(36, 37), destfile = "newmap3.png", 
                       maptype = "satellite")


PlotOnStaticMap(newmap3, lat = c(36.3, 35.8, 36.4), lon = c(-5.5, -5.6, -5.8), zoom = 10, 
                cex = 4, pch = 19, col = "red", FUN = points, add = F)

#============== R Markdown ====
install.packages("rmarkdown")
library(rmarkdown)

install.packages("devtools")
devtools::install_github("rstudio/bookdown")

